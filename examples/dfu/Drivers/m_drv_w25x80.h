#ifndef __W25Q80_H__
#define __W25Q80_H__

#include "app_error.h"

/* 存储容量参数，单位为字节 */
#define PAGE_SIZE							(256)
#define SECTOR_SIZE							(4096)
#define BLOCK_SIZE							(SECTOR_SIZE * 16)
#define CHIP_SIZE							(BLOCK_SIZE * 16)

/* 扇区数和块数 */
#define SECTOR_NUM_MAX						(CHIP_SIZE / SECTOR_SIZE) // 1MBYTE,ÓÐ256¸öÉÈÇø
#define BLOCK_NUM_MAX						(CHIP_SIZE / BLOCK_SIZE)  // 16¸ö¿é

#define 	FLASH_CMD_WRITE_ENABLE			0x06
#define 	FLASH_CMD_DUMMY					0xFF
#define 	FLASH_CMD_STATUS_REGISTER		0x05
#define 	FLASH_CMD_ERASE_SECTOR			0x20
#define 	FLASH_CMD_WRITE_PAGE			0x02
#define 	FLASH_CMD_READ_ID				0x90
#define   	FLASH_CMD_READ_RAM              0x03



//************************************************************************************************************
// 功能描述:   	唤醒外部Flash，擦除4KB后，让其休眠
// 函数参数:    无
// 返回值  :	操作结果(OK/FAIL)        
//************************************************************************************************************
ret_code_t w25x80_erase_sector(uint32_t addr);

//************************************************************************************************************
// 功能描述:   	唤醒外部Flash，擦除整个芯片后，让其休眠
// 函数参数:    无
// 返回值  :	操作结果(OK/FAIL)        
//************************************************************************************************************
ret_code_t w25x80_erase_chip(void);

//************************************************************************************************************
// 功能描述:   	唤醒外部Flash，写入数据后，让其休眠
// 函数参数:    addr		->	写数据的起始地址
//				buff		->	数据缓存区
//				len			->	数据长度
// 返回值  :	操作结果(OK/FAIL)         
//************************************************************************************************************
ret_code_t w25x80_write(uint32_t addr, uint8_t *buf, uint32_t len);

//************************************************************************************************************
// 功能描述:   	唤醒外部Flash，从W25X80读数据后，让其休眠
// 函数参数:    addr		->	读数据的起始地址
//				buff		->	数据缓存区
//				len			->	数据长度
// 返回值  :	操作结果(OK/FAIL)        
//************************************************************************************************************
ret_code_t w25x80_read(uint32_t addr, uint8_t *buf, uint32_t len);

//************************************************************************************************************
// 功能描述:   	初始化SPI和管脚，然后休眠
// 函数参数:    addr		->	读数据的起始地址
//				buff		->	数据缓存区
//				len			->	数据长度
// 返回值  :	操作结果(OK/FAIL)        
//************************************************************************************************************
ret_code_t w25x80_init(void);

//************************************************************************************************************
// 功能描述:   	读取外部Flash的ID
// 函数参数:    无
// 返回值  :	读到的ID值(2Byte)        
//************************************************************************************************************
uint16_t w25x80_read_id(void);

//************************************************************************************************************
// 功能描述:   	读取外部Flash的序列号
// 函数参数:    buff		->		序列号缓存区
// 返回值  :	无       
//************************************************************************************************************
void w25x80_read_uuid(uint8_t *buff);

#endif
