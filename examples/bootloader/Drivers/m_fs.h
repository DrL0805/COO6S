#ifndef __M_FS_H__
#define __M_FS_H__

#include "nrf_fstorage.h"
#include "nrf_fstorage_sd.h"

#define START_ADDR 		((512 - 8 - 160) * 1024)	//0x56000
#define END_ADDR    	((512 - 8) * 1024 - 1)		//0x7DFFF

//************************************************************************************************************
// 功能描述:   	初始化FS
// 函数参数:    无	
// 返回值  :	操作结果
//************************************************************************************************************
ret_code_t m_fs_init(void);

//************************************************************************************************************
// 功能描述:   	从内部Flash读取数据
// 函数参数:    addr		->		内部Flash地址
//				buf			->		缓存区
//				len			->		数据长度
// 返回值  :	操作结果
//************************************************************************************************************ 
ret_code_t m_fs_read(uint32_t addr, uint8_t *buf, uint16_t	len);

//************************************************************************************************************
// 功能描述:   	往内部Flash写数据
// 函数参数:    addr		->		内部Flash地址
//				buf			->		缓存区
//				len			->		数据长度，必须是4的倍数
// 返回值  :	操作结果
//************************************************************************************************************ 
ret_code_t m_fs_write(uint32_t addr, uint8_t *buf, uint16_t len);

//************************************************************************************************************
// 功能描述:   	擦内部Flash
// 函数参数:    addr		->		内部Flash地址
//				pages		->		擦除多少页的数据
// 返回值  :	操作结果
//************************************************************************************************************
ret_code_t m_fs_erase(uint32_t addr, uint16_t pages);

//************************************************************************************************************
// 功能描述:   	内部Flash是否处于忙碌
// 函数参数:    无
// 返回值  :	无
//************************************************************************************************************
bool m_fs_is_busy(void);

#endif

